#include <iostream>
#include <fstream>
#include <locale>
#include <string>
#include <vector>
#include <limits>
#include <sstream>
#include "usingDeclarations.hpp"

vector <string> trickyWordsVector;
vector <string> nameCurseWordsVector; 
void printWords(char userLetterInput);
void getTrickyWords();
void getNameCurseWords();
// void getNameCurseWordMessages(string userFirstName);

int main() {	
	cout << "----------------<>-----------\n";
	cout << "Welcome to Your TRICKY WORDS Helper!\n";
	cout << "----------------<>-----------\n";

	string userFirstName;
	size_t menuOnlyAlpha{};
	bool isNameCurseWord = false;

	do {
		cout << "\nEnter your first name: ";
		getline(cin, userFirstName);
		menuOnlyAlpha = userFirstName.find_first_of("0123456789`~!@#$%^&*()':'';''/'-_=+{}[]|:<>,.' '?'\t\"");
		char(tolower(userFirstName[0])); //todo doesn't work

		getNameCurseWords();

		if (find(nameCurseWordsVector.begin(), nameCurseWordsVector.end(), userFirstName) != nameCurseWordsVector.end()) {
			cout << "Curse word entered. SAILOR MOUTH present.\n"; //todo add messages, lol
			// getNameCurseWordMessages(userFirstName);
			isNameCurseWord = true;
		} 	else {
			isNameCurseWord = false;
		}
	} while (isNameCurseWord || menuOnlyAlpha != string::npos || userFirstName.empty());

	char userLetterInput; 
	char userChoiceContinue;

	do {
		do {
		cout << "\nEnter a letter [a-z]: ";
		cin >> userLetterInput;
		cin.ignore(numeric_limits<streamsize>::max(), '\n');
		userLetterInput = toupper(userLetterInput);

		if (isalpha(userLetterInput)) {
			cout << "\nHey " << userFirstName << ",\n\nHere's your list of tricky words for the letter (" << char(toupper(userLetterInput)) << "):\n" << endl;
			}
		} while (!isalpha(userLetterInput));

		getTrickyWords();

		printWords(userLetterInput);
		
		do {
			cout << "\nWould you like to enter another letter [y,n]?: ";
			cin >> userChoiceContinue;
			cin.ignore(numeric_limits<streamsize>::max(), '\n');
		} while (char(tolower(userChoiceContinue)) != 'y' && char(tolower(userChoiceContinue)) != 'n');
	} while (char(tolower(userChoiceContinue)) == 'y');

	cout << "\n----------------<>-----------\n";
	cout << "Thank you for using Your TRICKY WORDS Helper!\n";
	cout << "\n----------------<>-----------\n";

	return 0;
} // end main()

void printWords(char userLetterInput) {
	for (int i = 0; i < trickyWordsVector.size(); i++) {
		if (trickyWordsVector[i][0] == userLetterInput) {
			cout << trickyWordsVector[i];
			cout << "\n";
		}
	}
} // end printWords()

void getTrickyWords() {
	ifstream trickyWordsFile("trickyWordsList.txt");

	if (trickyWordsFile.is_open()) {
		if (trickyWordsVector.empty()) {
			string line;
			while (getline(trickyWordsFile, line)) {
				if (line.size() > 0) {
					trickyWordsVector.push_back(line);
				}
			}
		}
	}
	else {
		cerr << "Cannot open the file.";
	}

	trickyWordsFile.close();

} // end getTrickyWords()

void getNameCurseWords() {
	ifstream nameCurseWordsFile("nameCurseWordsList.txt");

	if (nameCurseWordsFile.is_open()) {
		if (nameCurseWordsVector.empty()) {
			string line;
			while (getline(nameCurseWordsFile, line)) {
				if (line.size() > 0) {
					nameCurseWordsVector.push_back(line);
				}
			}
		}
	}
	else {
		cerr << "Cannot open the file, you sailor mouth. ;)";
	}

	nameCurseWordsFile.close();

} // end getNameCurseWords()

#if 0
void getNameCurseWordMessages(string userFirstName) {


} // end getNameCurseWordMessages()
#endif
