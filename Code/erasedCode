/**
Description: Application that takes in a letter and displays tricky-to-spell words.
**/


//todo old vector code - bool getFileContent(string, vector <string>);


		//first way to print file
		// for (string & line : trickyWordsVector) {
			//cout << line << endl;
	//}

		// second way to print file
		/*
		if (trickyWordsFile.is_open()) {
			cout << trickyWordsFile.rdbuf(); //TODO print 
		} else{
			cout << "Unable to open the file.";
			}
			*/

			// third way to print file
			
			/*TODO used code
			while (getline(trickyWordsFile, line)) {
			if (line.size() > 0) {
				trickyWordsVector.push_back(line);
			}
		}
		
		for (int i = 0; i < trickyWordsVector.size(); i++) {
			cout << trickyWordsVector[i] << endl;
		}
		

		trickyWordsFile.close();
		*/

		/*
		switch (userLetterInput) {


		case a:
			string letterA[] = {};


		case 'b':
			int bElements;

				string letterB[] = {
				"Barbecue",
				"Beginning",
				"Believe",
				"Bellwether",
				"Bicycle",
				"Broccoli",
				"Bureau",
				"Business" };
				bElements = letterB[].length();
			for (int i = 0; i < letterB[].length(); i++) {

			};

			cout << letterB[];
			break;
		} // end switch
	*/

/*
http://www.cplusplus.com/forum/beginner/217118/

https://stackoverflow.com/questions/39681897/c-how-to-fill-a-vector-of-undefined-size-with-strings

https://thispointer.com/c-how-to-read-a-file-line-by-line-into-a-vector/

	// get the contents of file in vector
		bool trickyWordsResult = getFileContent("trickyWordsList.txt", trickyWordsVector);

		if (trickyWordsResult) {
			// print vector's content
			for (string & line : trickyWordsVector)
				cout << line << endl;
		}

		bool getFileContent(string trickyWordsString, vector <string> & trickyWordsVector) {

	// open file
	ifstream in(trickyWordsString.c_str());

	//TODO check if file is valid
	if (!in) {
		cerr << "Cannot open the file: " << trickyWordsString << endl;
		return false;
	}

	while (getline(in, trickyWordsString)) {
		if (trickyWordsString.size() > 0)
			trickyWordsVector.push_back(trickyWordsString);
	}

	in.close();
	return true;
}

*/
